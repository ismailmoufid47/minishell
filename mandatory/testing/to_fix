
- don't include hidden files in * by itself, eg.: ls *

- sort the * output

- don't expand when the heredoc delimiter, eg: << *, <<  $HOME


-  ls | exit << stop | grep "asd"
Minishell: read_line: Permission denied
AddressSanitizer:DEADLYSIGNAL
=================================================================
==20368==ERROR: AddressSanitizer: SEGV on unknown address 0x5dc3c3cb2b10 (pc 0x71ef1fdb8a16 bp 0x5dc3c3cb2b10 sp 0x7ffe934d6660 T0)
==20368==The signal is caused by a WRITE memory access.
Minishell: ls: command not found
    #0 0x71ef1fdb8a15 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order) ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79
    #1 0x71ef1fdb8a15 in __asan::Allocator::AtomicallySetQuarantineFlagIfAllocated(__asan::AsanChunk*, void*, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cc:552
    #2 0x71ef1fdb8a15 in __asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:629
    #3 0x71ef1fdb8a15 in __asan::asan_free(void*, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:865
    #4 0x71ef1fe9d3d8 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:127
    #5 0x5dc3c3cafbf7 in error utils/errors.c:7
    #6 0x5dc3c3cafb09 in open_wrapper utils/wrappers.c:19
    #7 0x5dc3c3cabff0 in handle_here_doc 4_execution/execute_utils.c:11
    #8 0x5dc3c3caa98c in redirect 4_execution/execute.c:23
    #9 0x5dc3c3cac653 in redirect_builtins builtins/builtins.c:12
    #10 0x5dc3c3cad4ef in exit_cmd builtins/builtins.c:137
    #11 0x5dc3c3cab83b in execute 4_execution/execute.c:132
    #12 0x5dc3c3cb0bd1 in main /workspaces/minishell/mandatory/shell.c:106
    #13 0x71ef1fb19082 in __libc_start_main ../csu/libc-start.c:308
    #14 0x5dc3c3ca56ed in _start (/workspaces/minishell/minishell+0x46ed)

AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order)
==20368==ABORTING
@isel-mou ➜ /workspaces/minishell (main) $ ls | exit << stop | grep "asd"^C
@isel-mou ➜ /workspaces/minishell (main) $ ./minishell 
codespace@codespaces-591a51: /workspaces/minishell$ ls | exit << stop | grep "asd"
> stop
exit
codespace@codespaces-591a51: /workspaces/minishell$ ls | cat << stop | grep "asd"
codespace@codespaces-591a51: /workspaces/minishell$ exit

=================================================================
==31432==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 2 byte(s) in 1 object(s) allocated from:
    #0 0x76f388a59808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144
    #1 0x5e4f21e9c5ff in ft_itoa (/workspaces/minishell/minishell+0x105ff)
    #2 0x5e4f21e96d9b in execute 4_execution/execute.c:167
    #3 0x5e4f21e9bbd1 in main /workspaces/minishell/mandatory/shell.c:106
    #4 0x76f3886d5082 in __libc_start_main ../csu/libc-start.c:308

SUMMARY: AddressSanitizer: 2 byte(s) leaked in 1 allocation(s).
